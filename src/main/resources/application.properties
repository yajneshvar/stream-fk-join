
schema.registry.url=http://localhost:8081

spring.kafka.streams.application-id=trade-list-test-yaj

# print the topologies
logging.level.org.springframework.kafka.config=DEBUG

#spring.cloud.stream.kafka.streams.binder.configuration.default.application.id = test
spring.application.name=trade-list-test
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.binder.configuration.schema.registry.url=${schema.registry.url}
spring.cloud.stream.kafka.streams.binder.configuration.auto.register.schemas=true
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.acks=all
spring.cloud.stream.kafka.streams.binder.configuration.enable.idempotence=false
spring.cloud.stream.kafka.streams.binder.configuration.max.in.flight.requests.per.connection=1
spring.cloud.stream.kafka.streams.binder.configuration.topology.optimization=all
spring.cloud.stream.kafka.streams.binder.configuration.replication.factor=3
spring.cloud.stream.kafka.streams.binder.configuration.cache.max.bytes.buffering=0
spring.kafka.bootstrap-servers=http://localhost:9092




spring.cloud.stream.kafka.streams.bindings.yajTrade.consumer.application-id=yajTrade
spring.cloud.stream.bindings.yajTrade.destination = yajTrade

spring.cloud.stream.kafka.streams.bindings.yajVehicle.consumer.application-id=yajVehicle
spring.cloud.stream.bindings.yajVehicle.destination = yajVehicle

spring.cloud.stream.kafka.streams.bindings.yajTradeIn.consumer.application-id=yajTradeIn
spring.cloud.stream.bindings.yajTradeIn.destination = yajTradeIn

spring.cloud.stream.kafka.streams.bindings.yajVehicleIn.consumer.application-id=yajVehicleIn
spring.cloud.stream.bindings.yajVehicleIn.destination = yajVehicleIn

